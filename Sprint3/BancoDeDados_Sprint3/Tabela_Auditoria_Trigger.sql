-- CriaÃ§Ã£o tabela auxiliar para armazenamento dos logs
CREATE TABLE ODONTO_AUDITORIA (
    ID_AUDITORIA NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    TIPO_OPERACAO VARCHAR2(10),
    NOME_TABELA VARCHAR2(30),
    ID_REGISTRO NUMBER,
    DATA_ALTERACAO TIMESTAMP DEFAULT SYSTIMESTAMP,
    USUARIO VARCHAR2(30)
);


-- Trigger para ODONTO_PACIENTE
CREATE OR REPLACE TRIGGER TRG_AUDIT_PACIENTE
AFTER INSERT OR UPDATE OR DELETE ON ODONTO_PACIENTE
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        INSERT INTO ODONTO_AUDITORIA (TIPO_OPERACAO, NOME_TABELA, ID_REGISTRO, USUARIO)
        VALUES ('INSERT', 'ODONTO_PACIENTE', :NEW.ID_PACIENTE, USER);
    ELSIF UPDATING THEN
        INSERT INTO ODONTO_AUDITORIA (TIPO_OPERACAO, NOME_TABELA, ID_REGISTRO, USUARIO)
        VALUES ('UPDATE', 'ODONTO_PACIENTE', :OLD.ID_PACIENTE, USER);
    ELSIF DELETING THEN
        INSERT INTO ODONTO_AUDITORIA (TIPO_OPERACAO, NOME_TABELA, ID_REGISTRO, USUARIO)
        VALUES ('DELETE', 'ODONTO_PACIENTE', :OLD.ID_PACIENTE, USER);
    END IF;
END;
/

-- Trigger para ODONTO_DENTISTA
CREATE OR REPLACE TRIGGER TRG_AUDIT_DENTISTA
AFTER INSERT OR UPDATE OR DELETE ON ODONTO_DENTISTA
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        INSERT INTO ODONTO_AUDITORIA (TIPO_OPERACAO, NOME_TABELA, ID_REGISTRO, USUARIO)
        VALUES ('INSERT', 'ODONTO_DENTISTA', :NEW.ID_DENTISTA, USER);
    ELSIF UPDATING THEN
        INSERT INTO ODONTO_AUDITORIA (TIPO_OPERACAO, NOME_TABELA, ID_REGISTRO, USUARIO)
        VALUES ('UPDATE', 'ODONTO_DENTISTA', :OLD.ID_DENTISTA, USER);
    ELSIF DELETING THEN
        INSERT INTO ODONTO_AUDITORIA (TIPO_OPERACAO, NOME_TABELA, ID_REGISTRO, USUARIO)
        VALUES ('DELETE', 'ODONTO_DENTISTA', :OLD.ID_DENTISTA, USER);
    END IF;
END;
/

-- Trigger para ODONTO_CONSULTA
CREATE OR REPLACE TRIGGER TRG_AUDIT_CONSULTA
AFTER INSERT OR UPDATE OR DELETE ON ODONTO_CONSULTA
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        INSERT INTO ODONTO_AUDITORIA (TIPO_OPERACAO, NOME_TABELA, ID_REGISTRO, USUARIO)
        VALUES ('INSERT', 'ODONTO_CONSULTA', :NEW.ID_CONSULTA, USER);
    ELSIF UPDATING THEN
        INSERT INTO ODONTO_AUDITORIA (TIPO_OPERACAO, NOME_TABELA, ID_REGISTRO, USUARIO)
        VALUES ('UPDATE', 'ODONTO_CONSULTA', :OLD.ID_CONSULTA, USER);
    ELSIF DELETING THEN
        INSERT INTO ODONTO_AUDITORIA (TIPO_OPERACAO, NOME_TABELA, ID_REGISTRO, USUARIO)
        VALUES ('DELETE', 'ODONTO_CONSULTA', :OLD.ID_CONSULTA, USER);
    END IF;
END;
/



-- TESTANDO
BEGIN
    -- Limpar dados existentes
    DELETE FROM ODONTO_AUDITORIA;
    DELETE FROM ODONTO_CONSULTA;
    DELETE FROM ODONTO_PACIENTE;
    DELETE FROM ODONTO_DENTISTA;
    DELETE FROM ODONTO_ENDERECO;

    -- Inserir endereço
    ODONTO_PACKAGE.INSERIR_ODONTO_ENDERECO(1, 'Rua Teste', '123', 'Apto 1', 'Centro', 'São Paulo', 'SP', '01000-000');

    -- Inserir paciente
    ODONTO_PACKAGE.INSERIR_ODONTO_PACIENTE(1, 'João Silva', TO_DATE('1990-05-15', 'YYYY-MM-DD'), 'M', '123.456.789-01', 
        'joao@email.com', '11999999999', 'Nenhum', 1, NULL);

    -- Inserir dentista
    ODONTO_PACKAGE.INSERIR_ODONTO_DENTISTA(1, 'Dr. Pedro', 'Ortodontia', '12345-SP', 0, 1);

    -- Inserir consulta
    ODONTO_PACKAGE.INSERIR_ODONTO_CONSULTA(1, SYSDATE, '14:00', 'Dor de dente', 'Consulta', 'Realizada', 10, 1, 1);

    -- Atualizar paciente
    ODONTO_PACKAGE.ATUALIZAR_ODONTO_PACIENTE(1, 'João Silva Atualizado', TO_DATE('1990-05-15', 'YYYY-MM-DD'), 'M', 
        '123.456.789-01', 'joao@email.com', '11999999999', 'Nenhum', 1, NULL);

    -- Atualizar dentista
    ODONTO_PACKAGE.ATUALIZAR_ODONTO_DENTISTA(1, 'Dr. Pedro Atualizado', 'Ortodontia', '12345-SP', 0, 1);

    -- Deletar consulta
    DELETE FROM ODONTO_CONSULTA WHERE ID_CONSULTA = 1;

    -- Deletar paciente
    ODONTO_PACKAGE.DELETAR_ODONTO_PACIENTE(1);

    -- Deletar dentista
    ODONTO_PACKAGE.DELETAR_ODONTO_DENTISTA(1);
END;
/

-- Consultar os logs de auditoria
SELECT * FROM ODONTO_AUDITORIA ORDER BY DATA_ALTERACAO;